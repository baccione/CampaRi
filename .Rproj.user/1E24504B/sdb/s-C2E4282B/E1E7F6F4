{
    "collab_server" : "",
    "contents" : "# @title .onAttach\n# @description  Load required data into gloval enviroment\n# @keywords internal\n.onAttach<- function (libname, pkgname){\n  # if (!interactive()|| stats::runif(1) > 0.1) return()\n  message(paste0(\n    \" ==============================================================\\n\",\n    \"    \\n\",\n    \"                            CAMPARI                           \\n\",\n    \"    \\n\",\n    \"    \\n\",\n    \" ------------------------------------------------------------\\n\",\n    \" Analysing time series.                 \\n\",\n    \" Version: \",utils::packageVersion(\"campackage\"),\"\\n\",\n    \" ==============================================================\\n\"))\n}\n\n.onLoad <- function(libname, pkgname) {\n  op <- options()\n  op.campackage <- list(\n    campackage.path = getwd(),\n    campackage.data_management = \"R\",\n    campackage.data_filename = \"dsetf.h5\"\n  )\n  toset <- !(names(op.campackage) %in% names(op))\n  if(any(toset)) options(op.campackage[toset])\n  cat(\"All output will be written to the current working directory: \", getwd(),\"\\n\")\n  invisible()\n}\n# .onLoad <- function() {\n#   \n#   cur_directory <- getwd()\n#   message(\"Welcome to the analysis tool from CAMPARI!\")\n#   cat(\"All output will be written to the current working directory: \", cur_directory,\"\\n\\n\\n\")\n#   if(data_management == \"R\") cat(\"Normal memory handling selected. Without hdf5 backend file management it will be difficult for R to handle big data-sets.\")\n#   else if(data_management == \"h5pfc\") cat(\"Selected data support: hdf5 with mpi support\\n\")\n#   else if(data_management == \"h5fc\") cat(\"Selected data support: hdf5 without mpi support\\n\")\n#   else stop(\"Invalid data management keyword inserted. Check the available methods on the guide.\")\n#           \n#   if(data_management != \"R\"){\n#     warning('The dumping filename will be \"dsetf.h5\". If already existent it will be overwritten')\n#     cat(\"Checking for dependencies...\")\n#     command_loc <- system(paste0(\"which \",data_management))\n#     if(command_loc==\"\") stop(\"No support for hdf5. Please check installation and correct linkage of the command to your enviroment.\")\n#   }\n#   # assign(\"data_man\",data_management, envir = as.environment(\"package:campackage\"))\n#   # environment(data_management) <- as.environment(\"package:campackage\")\n#   campackage_cache<-new.env(parent = as.environment(\"package:campackage\"))\n#   campackage_cache$data_manager <- data_management\n#   if(any(search()==\"campackage_cache\")) detach(\"campackage_cache\")\n#   attach(campackage_cache)\n#   # As loading is no more necessary this could be done when the package is attached. *TODO\n# \n# \n# \n#   # system(\"cp campackage/fortran/rerun_PIX.f90 .\",intern=TRUE,ignore.stderr=TRUE,wait=TRUE,input=NULL)\n# \n#   # manually copy source from tools-directory (do this by hand)\n#   # then compile rerun_PIX.f90 by (on Linux) doing:\n#   # system(\"R CMD SHLIB rerun_PIX.f90\",intern=TRUE,ignore.stderr=TRUE,wait=TRUE,input=NULL)\n#   # system(\"R CMD SHLIB campackage/src_fortran/f_campackage.f90\",intern=TRUE,ignore.stderr=TRUE,wait=TRUE,input=NULL)\n#   # load shared object\n#   # dyn.load(\"rerun_PIX.so\")\n# }\n",
    "created" : 1474279467271.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3890257158",
    "id" : "E1E7F6F4",
    "lastKnownWriteTime" : 1474272497,
    "last_content_update" : 1474272497,
    "path" : "~/Projects/2016/CampaR/campackage/R/misc.R",
    "project_path" : "R/misc.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}